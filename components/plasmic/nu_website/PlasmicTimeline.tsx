// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jodssu5PmGaRR5vFRfdqKh
// Component: 2PIwDBnX-w9

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import HeaderHeroPage from "../../HeaderHeroPage"; // plasmic-import: nF2ySVLpMIh/component
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import Button from "../../Button"; // plasmic-import: jGsW_a0TMYi/component
import Footer from "../../Footer"; // plasmic-import: oAWDpYdN0s/component

import { useScreenVariants as useScreenVariants_0Uf6PR80TuUp8 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 0UF6pR80tuUP8/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_nu_website.module.css"; // plasmic-import: jodssu5PmGaRR5vFRfdqKh/projectcss
import sty from "./PlasmicTimeline.module.css"; // plasmic-import: 2PIwDBnX-w9/css

import NatalieUnterstellLogoIcon from "./icons/PlasmicIcon__NatalieUnterstellLogo"; // plasmic-import: A4jG8WrNiS0Xj/icon
import _Icon from "./icons/PlasmicIcon___"; // plasmic-import: 6Vrd0S0dtKQ/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: iemRUT8B78Y/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: tfqLjeUE7Y3/icon

export type PlasmicTimeline__VariantMembers = {};
export type PlasmicTimeline__VariantsArgs = {};
type VariantPropType = keyof PlasmicTimeline__VariantsArgs;
export const PlasmicTimeline__VariantProps = new Array<VariantPropType>();

export type PlasmicTimeline__ArgsType = {};
type ArgPropType = keyof PlasmicTimeline__ArgsType;
export const PlasmicTimeline__ArgProps = new Array<ArgPropType>();

export type PlasmicTimeline__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroPage?: p.Flex<typeof HeaderHeroPage>;
  columns?: p.Flex<"div">;
  loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8?: p.Flex<"p">;
  image?: p.Flex<"div">;
  defySection?: p.Flex<"div">;
  riseSection?: p.Flex<"div">;
  defySection2?: p.Flex<"div">;
  riseSection2?: p.Flex<"div">;
  defySection3?: p.Flex<"div">;
  riseSection3?: p.Flex<"div">;
  defySection4?: p.Flex<"div">;
  riseSection4?: p.Flex<"div">;
  defySection5?: p.Flex<"div">;
  riseSection5?: p.Flex<"div">;
  defySection6?: p.Flex<"div">;
  riseSection6?: p.Flex<"div">;
  defySection7?: p.Flex<"div">;
  riseSection7?: p.Flex<"div">;
  defySection8?: p.Flex<"div">;
  riseSection8?: p.Flex<"div">;
  image2?: p.Flex<"div">;
  defySection9?: p.Flex<"div">;
  riseSection9?: p.Flex<"div">;
  defySection10?: p.Flex<"div">;
  riseSection10?: p.Flex<"div">;
  image3?: p.Flex<"div">;
  defySection11?: p.Flex<"div">;
  riseSection11?: p.Flex<"div">;
  image4?: p.Flex<"div">;
  defySection12?: p.Flex<"div">;
  riseSection12?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultTimelineProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTimeline__RenderFunc(props: {
  variants: PlasmicTimeline__VariantsArgs;
  args: PlasmicTimeline__ArgsType;
  overrides: PlasmicTimeline__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_0Uf6PR80TuUp8()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicTimeline.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicTimeline.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicTimeline.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <HeaderHeroPage
            data-plasmic-name={"headerHeroPage"}
            data-plasmic-override={overrides.headerHeroPage}
            className={classNames("__wab_instance", sty.headerHeroPage)}
            coverPage={
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__yfrRz)}
                displayHeight={"100%" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100%" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/nu_website/images/fotoHalftone01Jpg.jpg",
                  fullWidth: 2560,
                  fullHeight: 1640,
                  aspectRatio: undefined
                }}
              />
            }
            slot={
              <NavigationBar
                brand={
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__tISyO
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <NatalieUnterstellLogoIcon
                      className={classNames(projectcss.all, sty.svg__foXvn)}
                      role={"img"}
                    />
                  </p.PlasmicLink>
                }
                className={classNames(
                  "__wab_instance",
                  sty.navigationBar__fz9Vp
                )}
                closeButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fNfBy)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/close.svg" as const}
                  />
                }
                forceOpenMenu={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? false
                    : true
                }
                itemsGap={32 as const}
                menuItems={
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___8SmUa)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__nfztq
                      )}
                      component={Link}
                      href={`/`}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__vJgf9
                        )}
                        color={"clear" as const}
                        shape={"sharp" as const}
                        size={"minimal" as const}
                      >
                        {"Home"}
                      </Button>
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__wf3Tl
                      )}
                      component={Link}
                      href={`/about`}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___8Nh1X
                        )}
                        color={"clear" as const}
                        shape={"sharp" as const}
                        size={"minimal" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vttqW
                          )}
                        >
                          {"About"}
                        </div>
                      </Button>
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___4KbG8
                      )}
                      component={Link}
                      href={`/timeline`}
                      platform={"nextjs"}
                    >
                      <Button
                        active={true}
                        className={classNames(
                          "__wab_instance",
                          sty.button__cNgC
                        )}
                        color={"clear" as const}
                        shape={"sharp" as const}
                        size={"minimal" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6LsUe
                          )}
                        >
                          {"Timeline"}
                        </div>
                      </Button>
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__az8EU
                      )}
                      component={Link}
                      href={`/clipping`}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__dp9Fo
                        )}
                        color={"clear" as const}
                        shape={"sharp" as const}
                        size={"minimal" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__l0IDv
                          )}
                        >
                          {"Clipping"}
                        </div>
                      </Button>
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__xH16O
                      )}
                      component={Link}
                      href={`/articles`}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__aVZtR
                        )}
                        color={"clear" as const}
                        shape={"sharp" as const}
                        size={"minimal" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___73X2D
                          )}
                        >
                          {"Articles"}
                        </div>
                      </Button>
                    </p.PlasmicLink>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__yf53G
                      )}
                      component={Link}
                      href={`/contact`}
                      platform={"nextjs"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__j5Axo
                        )}
                        color={"clear" as const}
                        shape={"sharp" as const}
                        size={"minimal" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gVrb
                          )}
                        >
                          {"Contact"}
                        </div>
                      </Button>
                    </p.PlasmicLink>
                  </p.Stack>
                }
                openButton={
                  <React.Fragment>
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__y31Yt)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        src={"https://static1.plasmic.app/menu.svg" as const}
                      />
                    ) : null}
                    {true ? (
                      <_Icon
                        className={classNames(projectcss.all, sty.svg__pBiNz)}
                        role={"img"}
                      />
                    ) : null}
                  </React.Fragment>
                }
                responsiveBreakpoint={768 as const}
              />
            }
          >
            {"Timeline"}
          </HeaderHeroPage>
          <div className={classNames(projectcss.all, sty.freeBox__nhmV0)}>
            <div className={classNames(projectcss.all, sty.freeBox__mpPe3)}>
              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__i6YSn)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zIbW)}
                  >
                    <p
                      data-plasmic-name={
                        "loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8"
                      }
                      data-plasmic-override={
                        overrides.loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8
                      )}
                    >
                      {
                        "Natalie was born and raised in Porto União, a small town in southern Brazil. She has always been a great student and fell in love with the Amazon and indigenous peoples at a young age.\n\nShe likes to experience different cultures and to be in contact with nature. She has traveled the world, lived in three different countries, and enjoys sailing. \n\nNatalie has a Master's in Public Administration from Harvard University and a Bachelor's in Business Administration from Fundacao Getulio Vargas (FGV). Served as the Head of Sustainable Development for the Brazilian Presidency, the Head of the Amazonas State's Climate Change Center, and as one of Brazil's negotiators at the United Nations Framework Convention on Climate Change."
                      }
                    </p>
                  </p.Stack>
                </div>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.column___47KPu)}
                  />
                ) : null}
              </p.Stack>
            </div>
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__h8U9)}
              >
                <div
                  data-plasmic-name={"image"}
                  data-plasmic-override={overrides.image}
                  className={classNames(projectcss.all, sty.image)}
                />

                <div
                  data-plasmic-name={"defySection"}
                  data-plasmic-override={overrides.defySection}
                  className={classNames(projectcss.all, sty.defySection)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eoaXc)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__baBqC)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jTcjZ)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ecaSp
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___6SEFe
                            )}
                          >
                            {"1983"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5Ft9C
                            )}
                          >
                            {
                              "Natalie was born on Christmas Eve, December 24th, in Porto União - SC, a small town on the border between the states of Paraná and Santa Catarina. She had a very happy childhood, always involved in cultural and sports activities such as piano, ballet, basketball, volleyball, events organization, and school newspaper participation, among others. "
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sjSew)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__rM9Ph)}
                />

                <div
                  data-plasmic-name={"riseSection"}
                  data-plasmic-override={overrides.riseSection}
                  className={classNames(projectcss.all, sty.riseSection)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dyQmu)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fQrMb
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__mIyRn
                            )}
                          >
                            {"1995"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__mtPA
                            )}
                          >
                            {
                              "At the age of 12, Natalie moved to Curitiba-PR and left behind the freedom that a small town provides. With her move to Curitiba, she dedicated herself more to her studies."
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__v56Yy)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__m586Y)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__iMpgI)}
              >
                <div
                  data-plasmic-name={"defySection2"}
                  data-plasmic-override={overrides.defySection2}
                  className={classNames(projectcss.all, sty.defySection2)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nN1Oy)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aCFv)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7VGoT
                      )}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__okAt0
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__qJwl3
                            )}
                          >
                            {"1996"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vIwAx
                            )}
                          >
                            {
                              "Natalie always enjoyed studying and got a full scholarship to one of the best schools in town, a renowned religious school that collected many outstanding students and the best grades in the university entrance exams of the time. "
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pSphD)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__l3CWs)}
                />

                <div
                  data-plasmic-name={"riseSection2"}
                  data-plasmic-override={overrides.riseSection2}
                  className={classNames(projectcss.all, sty.riseSection2)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pciBr)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gh4Nl
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__okHap
                            )}
                          >
                            {"1997"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__apn7T
                            )}
                          >
                            {
                              "At 14, she went on his first international exchange and studied for two months in Australia."
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xmHw)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wE2G)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__f6Co6)}
              >
                <div
                  data-plasmic-name={"defySection3"}
                  data-plasmic-override={overrides.defySection3}
                  className={classNames(projectcss.all, sty.defySection3)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jmTfI)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__trCeJ)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Ok3P
                      )}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__caSt
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__pa2S
                            )}
                          >
                            {"2000"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fr6Pe
                            )}
                          >
                            {
                              "At the age of 17, she was approved at the Business Administration School of the Getúlio Vargas Foundation (EAESP/FGV) and moved to São Paulo."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wynrz)}
              >
                <div
                  data-plasmic-name={"riseSection3"}
                  data-plasmic-override={overrides.riseSection3}
                  className={classNames(projectcss.all, sty.riseSection3)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mWqPl)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__crQmu
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__db3Iz
                            )}
                          >
                            {"2002"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__ktK9E
                            )}
                          >
                            {
                              "In the middle of her undergraduate studies, Natalie had her first contact with Public Policy during a college expedition to Amapá. She became more interested in the subject, understood its purpose, and focused on Public Administration."
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__e8R3Z)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8Zkbl
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__aeAc9)}
              >
                <div
                  data-plasmic-name={"defySection4"}
                  data-plasmic-override={overrides.defySection4}
                  className={classNames(projectcss.all, sty.defySection4)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5Fs3K
                      )}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4CYzB
                      )}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rtJwR)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__l0EeO
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__lgm6M
                            )}
                          >
                            {"2003"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x0XhY
                            )}
                          >
                            {
                              "She started an internship at the NGO ISA - Instituto Socioambiental, which defends indigenous causes. Natalie worked with sustainable development plans associated with the government and had the opportunity to do local work in Amazonian communities."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__a9A3I)}
              >
                <div
                  data-plasmic-name={"riseSection4"}
                  data-plasmic-override={overrides.riseSection4}
                  className={classNames(projectcss.all, sty.riseSection4)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zGaQ)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0N7Y
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__pd1Hg
                            )}
                          >
                            {"2004"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__a5Ihd
                            )}
                          >
                            {
                              "After graduating, Natalie was hired by ISA. At age 21, she was transferred to São Gabriel da Cachoeira - AM, the most indigenous city in Brazil that borders Colombia and Venezuela. "
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tfbOr)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jOn1P)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mpFj8)}
              >
                <div
                  data-plasmic-name={"defySection5"}
                  data-plasmic-override={overrides.defySection5}
                  className={classNames(projectcss.all, sty.defySection5)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ntuM4)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__deIma)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hyQec)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jU1U0
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__bmGgf
                            )}
                          >
                            {"2006"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bMcli
                            )}
                          >
                            {
                              "While working in São Gabriel da Cachoeira - AM, Natalie began developing public policy plans."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dm1Dw)}
              >
                <div
                  data-plasmic-name={"riseSection5"}
                  data-plasmic-override={overrides.riseSection5}
                  className={classNames(projectcss.all, sty.riseSection5)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jKd9L)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bnv9U
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__cK0Xm
                            )}
                          >
                            {"2007"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__m185Y
                            )}
                          >
                            {
                              "After three years in São Gabriel da Cachoeira, Amazonas and her partner moved to Manaus, Amazonas, where she created a gallery that resells indigenous products. In the same year, Natalie received an offer to do a one-and-a-half-year exchange program with NGO partners and moved to Norway in the second semester. Soon after her arrival, she participated in important meetings with government leaders and plans for million-dollar investments, where she met Marina Silva - Minister of the Environment at the time. "
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qxJ82)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0RyyQ
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ubD7P)}
              >
                <div
                  data-plasmic-name={"defySection6"}
                  data-plasmic-override={overrides.defySection6}
                  className={classNames(projectcss.all, sty.defySection6)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___83VDp
                      )}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gCkQn)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__g0Q4P)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yy6Da
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__bVrXt
                            )}
                          >
                            {"2008"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xUsga
                            )}
                          >
                            {
                              "Natalie moved from the small town she came from in Norway to Oslo, and there she started with the NGOs Rainforest Foundation and Norwegian Church Aid (Kirkens Nødhjelp). She got to know the Lapland region, studied, and met the indigenous people of the Arctic - the Samis. In December 2008, he returned to Brazil to dedicate himself to national activism."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ecg4T)}
              >
                <div
                  data-plasmic-name={"riseSection6"}
                  data-plasmic-override={overrides.riseSection6}
                  className={classNames(projectcss.all, sty.riseSection6)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox___7IzJ)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uPjOy
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__eImLc
                            )}
                          >
                            {"2009"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__e5Ma
                            )}
                          >
                            {
                              "After returning to Brazil, she was invited to return to ISA - Instituto Socioambiental, but now in Brasilia - DF and working with public policies. She traveled in search of solutions for climate issues to China, Thailand, and Germany. She participated in the United Nations Climate Change Conference 2009 - COP15 Copenhagen. At this event, she interacted with many personalities, such as José Serra, Marina Silva, and Lula, and talked about Indigenous Peoples with Dilma Rousseff, then Minister of the Civil House. Also, this year, Natalie traveled to a tribe in Benin, Africa. "
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aC8L)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xjOW)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oqz0Y)}
              >
                <div
                  data-plasmic-name={"defySection7"}
                  data-plasmic-override={overrides.defySection7}
                  className={classNames(projectcss.all, sty.defySection7)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uae8S)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dnrg0)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p73Qp)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__at5FD
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___1PoSk
                            )}
                          >
                            {"2010"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9LRpO
                            )}
                          >
                            {
                              "At 26, she won a director position at the Amazonas State Climate Change Agency. She started working as the Amazonas Secretary of Sustainable Development, being responsible for a team of 17 people. She worked hard on solutions that involved economy and environmental sustainability with the UN and other governments. She participated in meetings, negotiations, and national and international projects focused on forest management, environmental education, renewable energy, and sustainable policies. This year he also coordinated a working group in the search for REDD+ solutions [an instrument to financially reward countries for their results in the recovery and conservation of their forests]."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sUOrt)}
              >
                <div
                  data-plasmic-name={"riseSection7"}
                  data-plasmic-override={overrides.riseSection7}
                  className={classNames(projectcss.all, sty.riseSection7)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gsrKh)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bgBt
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__rzxUd
                            )}
                          >
                            {"2011"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__tsBtD
                            )}
                          >
                            {
                              "She started at the Ministry of Environment in Brasilia, in the Climate and Forests Management unit, with the function of creating national policies and conducting international negotiations. "
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bwVR)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gNHjX)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cCevy)}
              >
                <div
                  data-plasmic-name={"defySection8"}
                  data-plasmic-override={overrides.defySection8}
                  className={classNames(projectcss.all, sty.defySection8)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0RFm6
                      )}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zOoxh)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dal9Q)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tu0I2
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___85Kl3
                            )}
                          >
                            {"2013"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iwzF
                            )}
                          >
                            {
                              "She worked at the Secretariat of Strategic Affairs (SAE) with negotiations and participated in the Brazil 2040 program until its dissolution in 2015."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bntGh)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___1Fsed)}
                />

                <div
                  data-plasmic-name={"riseSection8"}
                  data-plasmic-override={overrides.riseSection8}
                  className={classNames(projectcss.all, sty.riseSection8)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__j76)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__n1Kk0
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___5LvvO
                            )}
                          >
                            {"2014"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__jaDm0
                            )}
                          >
                            {
                              "She represented Brazil in the group of experts in climate negotiations at BASIC - Brazil, South Africa, China, and India - in Guangzhou, China."
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__f3Oyg)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sXr5G)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bjC6P)}
              >
                <div
                  data-plasmic-name={"image2"}
                  data-plasmic-override={overrides.image2}
                  className={classNames(projectcss.all, sty.image2)}
                />

                <div
                  data-plasmic-name={"defySection9"}
                  data-plasmic-override={overrides.defySection9}
                  className={classNames(projectcss.all, sty.defySection9)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ck3S7)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uoUie)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aCYrX)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wjida
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__z4Ys0
                            )}
                          >
                            {"2015"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pyEg
                            )}
                          >
                            {
                              "In 2015, Natalie took a big step in her career: starting her Master of Public Policy Management at Harvard with a focus on adaptive leadership. This year she lived in the US, sailed across the Caribbean to Boston, and saw climate change in practice. She also took courses at MIT on systemic vision and environmental issues also focused on writing with Susan Solomon - the scientist who discovered the hole in the ozone layer and gave a solution. "
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__faq9K)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__zt7Nw)}
                />

                <div
                  data-plasmic-name={"riseSection9"}
                  data-plasmic-override={overrides.riseSection9}
                  className={classNames(projectcss.all, sty.riseSection9)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__daqJl)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tDo4
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__oIz
                            )}
                          >
                            {"2016"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__b7Z8
                            )}
                          >
                            {
                              "After completing her master's degree, she worked at the BELFER center [Robert and Renée Belfer Center for Science and International Relations]. She won a scholarship to the Center for Public Leadership in the department of Environmental Leadership. Attended the Arctic Circle meeting in Iceland and traveled to Dubai and Japan to understand what they were doing regarding energy challenges and public policy. She received an offer to return to the federal government but declined. Returned to Brazil and moved to Rio de Janeiro, RJ. "
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nRiBy)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tbP1G)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ht3Wn)}
              >
                <div
                  data-plasmic-name={"defySection10"}
                  data-plasmic-override={overrides.defySection10}
                  className={classNames(projectcss.all, sty.defySection10)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vDveV)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zp7Vs)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__btjkj)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k9Jr
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___3UMp
                            )}
                          >
                            {"2017"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iqO6R
                            )}
                          >
                            {
                              "Natalie moved to Mozambique and worked with climate change adaptation and also with Althelia Climate Fund in the state of Mato Grosso. She took over as deputy executive secretary of the Brazilian Climate Change Forum and worked on implementing the Brazilian climate change policy, which involved more than 650 people."
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sJ78T)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__iaOpf)}
                />

                <div
                  data-plasmic-name={"riseSection10"}
                  data-plasmic-override={overrides.riseSection10}
                  className={classNames(projectcss.all, sty.riseSection10)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mgMrp)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bybas
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__fatAu
                            )}
                          >
                            {"2018"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__vQWrF
                            )}
                          >
                            {
                              "Natalie moved back to Curitiba - PR, and during the 2018 elections, she actively participated in movements such as AGORA and RENOVA. Even though she was not elected, the experience was fruitful, and she later served as Superintendent of Innovation in the Government of Paraná. "
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fOuPh)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__adw2F)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dGp6Z)}
              >
                <div
                  data-plasmic-name={"image3"}
                  data-plasmic-override={overrides.image3}
                  className={classNames(projectcss.all, sty.image3)}
                />

                <div
                  data-plasmic-name={"defySection11"}
                  data-plasmic-override={overrides.defySection11}
                  className={classNames(projectcss.all, sty.defySection11)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9RtX9
                      )}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zn4L)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__w4Gbe)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fMpxJ
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__ohovM
                            )}
                          >
                            {"2019"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__foUz8
                            )}
                          >
                            {
                              'At the beginning of the year, she traveled to Antarctica for 21 days, an experience working with women. From this trip, she decided she needed to build and conquer spaces. So she founded the Talanoa Institute, a "think tank" or "laboratory of ideas" focused on research and reflection on public policies for climate change. \nShe created, together with a journalist from Época magazine, the initiative ‘Política por Inteiro’, which monitors signals of relevant public policies. She participated in Climate Week in New York and shared the project with other professionals in the field. During this year\'s COP, she organized a debate with women on Democracy and Climate Emergency. Maisa Rojas, Chile\'s current environment minister, was present. \n'
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xm2Pn)}
              >
                <div
                  data-plasmic-name={"riseSection11"}
                  data-plasmic-override={overrides.riseSection11}
                  className={classNames(projectcss.all, sty.riseSection11)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bdylj)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5HOfh
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__qXOv1
                            )}
                          >
                            {"2020"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p__bVYk
                            )}
                          >
                            {
                              'With the pandemic, she developed União Amazônia Viva, a humanitarian aid project, which raised 6 million reais. She participated in the podcast "A Terra é Redonda" from the Piauí Magazine, which was a success and opened essential doors. She has worked as a consultant for the Adaptation Fund, linked to the UN, and for the Green Climate Fund.'
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__y0C3M)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qOwih)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__byabp)}
              >
                <div
                  data-plasmic-name={"image4"}
                  data-plasmic-override={overrides.image4}
                  className={classNames(projectcss.all, sty.image4)}
                />

                <div
                  data-plasmic-name={"defySection12"}
                  data-plasmic-override={overrides.defySection12}
                  className={classNames(projectcss.all, sty.defySection12)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__slHs8)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bSaxr)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__j6Nx)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__djuDp
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__cqPz
                            )}
                          >
                            {"2021"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iCu13
                            )}
                          >
                            {
                              "A year of action for Natalie. She participated in the Green Climate Fund accreditation panel. Her companies - Política por Inteiro and Talanoa -  gain investment and visibility. The Talanoa Institute led a process called Climate and Development of corporate political articulation with young people, entrepreneurs, politicians, and indigenous groups that made Eduardo Leite, governor of Rio Grande do Sul, completely change his position concerning coal mines. Started as a columnist for Época Magazine. Mediated at an event with the British energy minister. Participated in the Roda Vida program. She was invited to participate in 3 boards of organizations: SOS Mata Atlântica, Centro Brasil no Clima, and Sistema B Brasil. "
                            }
                          </div>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nkNOk)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__awGsD)}
                />

                <div
                  data-plasmic-name={"riseSection12"}
                  data-plasmic-override={overrides.riseSection12}
                  className={classNames(projectcss.all, sty.riseSection12)}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tusQg)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2Q64K
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__pdDxk
                            )}
                          >
                            {"2022"}
                          </h1>
                          <p
                            className={classNames(
                              projectcss.all,
                              projectcss.p,
                              projectcss.__wab_text,
                              sty.p___5QFqr
                            )}
                          >
                            {
                              'She continued as an organization advisor and with her work in projects, focusing on elections. She launched a book with a group of people under 45, entitled "Reconstrução: o Brasil dos Anos 20". She is a member of a Security and Nature initiative in Bellagio, Italy, and of a process at the UN called 17 Rooms. She collaborated and developed, in partnership with Piauí Magazine, the second season of the podcast "A Terra é Redonda (indeed)" - which in English translation would be something like "The Earth is Round (indeed)”. She participated in the UN General Assembly in New York.\n'
                            }
                          </p>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__e3GDb)}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ig7Ka)}
                    />
                  ) : null}
                </div>
              </p.Stack>
            ) : null}
          </div>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          >
            <NavigationBar
              brand={
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ye2Ou
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <NatalieUnterstellLogoIcon
                    className={classNames(projectcss.all, sty.svg__nwJsl)}
                    role={"img"}
                  />
                </p.PlasmicLink>
              }
              className={classNames("__wab_instance", sty.navigationBar__ioqSu)}
              closeButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__r14Ro)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/close.svg" as const}
                />
              }
              forceOpenMenu={true}
              itemsGap={32 as const}
              menuItems={
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bwwYr)}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__jVoox
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___7EqK0
                      )}
                      color={"clear" as const}
                      shape={"sharp" as const}
                      size={"minimal" as const}
                    >
                      {"Home"}
                    </Button>
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__yILyI
                    )}
                    component={Link}
                    href={`/about`}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__qBwD7
                      )}
                      color={"clear" as const}
                      shape={"sharp" as const}
                      size={"minimal" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4ZoZv
                        )}
                      >
                        {"About"}
                      </div>
                    </Button>
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__qCgww
                    )}
                    component={Link}
                    href={`/timeline`}
                    platform={"nextjs"}
                  >
                    <Button
                      active={true}
                      className={classNames(
                        "__wab_instance",
                        sty.button__ib6A9
                      )}
                      color={"clear" as const}
                      shape={"sharp" as const}
                      size={"minimal" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nUhY
                        )}
                      >
                        {"Timeline"}
                      </div>
                    </Button>
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__nwU55
                    )}
                    component={Link}
                    href={`/clipping`}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__wWo0K
                      )}
                      color={"clear" as const}
                      shape={"sharp" as const}
                      size={"minimal" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x0ZwA
                        )}
                      >
                        {"Clipping"}
                      </div>
                    </Button>
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__heZOo
                    )}
                    component={Link}
                    href={`/articles`}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__yo124
                      )}
                      color={"clear" as const}
                      shape={"sharp" as const}
                      size={"minimal" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eJFlG
                        )}
                      >
                        {"Articles"}
                      </div>
                    </Button>
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__srlOl
                    )}
                    component={Link}
                    href={`/contact`}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__xKvyu
                      )}
                      color={"clear" as const}
                      shape={"sharp" as const}
                      size={"minimal" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k17WG
                        )}
                      >
                        {"Contact"}
                      </div>
                    </Button>
                  </p.PlasmicLink>
                </p.Stack>
              }
              openButton={
                <React.Fragment>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gK6X)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/menu.svg" as const}
                  />

                  <_Icon
                    className={classNames(projectcss.all, sty.svg__xmPv)}
                    role={"img"}
                  />
                </React.Fragment>
              }
              responsiveBreakpoint={768 as const}
            />
          </Footer>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroPage",
    "columns",
    "loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8",
    "image",
    "defySection",
    "riseSection",
    "defySection2",
    "riseSection2",
    "defySection3",
    "riseSection3",
    "defySection4",
    "riseSection4",
    "defySection5",
    "riseSection5",
    "defySection6",
    "riseSection6",
    "defySection7",
    "riseSection7",
    "defySection8",
    "riseSection8",
    "image2",
    "defySection9",
    "riseSection9",
    "defySection10",
    "riseSection10",
    "image3",
    "defySection11",
    "riseSection11",
    "image4",
    "defySection12",
    "riseSection12",
    "footer"
  ],
  headerHeroPage: ["headerHeroPage"],
  columns: [
    "columns",
    "loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8"
  ],
  loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8:
    [
      "loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8"
    ],
  image: ["image"],
  defySection: ["defySection"],
  riseSection: ["riseSection"],
  defySection2: ["defySection2"],
  riseSection2: ["riseSection2"],
  defySection3: ["defySection3"],
  riseSection3: ["riseSection3"],
  defySection4: ["defySection4"],
  riseSection4: ["riseSection4"],
  defySection5: ["defySection5"],
  riseSection5: ["riseSection5"],
  defySection6: ["defySection6"],
  riseSection6: ["riseSection6"],
  defySection7: ["defySection7"],
  riseSection7: ["riseSection7"],
  defySection8: ["defySection8"],
  riseSection8: ["riseSection8"],
  image2: ["image2"],
  defySection9: ["defySection9"],
  riseSection9: ["riseSection9"],
  defySection10: ["defySection10"],
  riseSection10: ["riseSection10"],
  image3: ["image3"],
  defySection11: ["defySection11"],
  riseSection11: ["riseSection11"],
  image4: ["image4"],
  defySection12: ["defySection12"],
  riseSection12: ["riseSection12"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroPage: typeof HeaderHeroPage;
  columns: "div";
  loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8: "p";
  image: "div";
  defySection: "div";
  riseSection: "div";
  defySection2: "div";
  riseSection2: "div";
  defySection3: "div";
  riseSection3: "div";
  defySection4: "div";
  riseSection4: "div";
  defySection5: "div";
  riseSection5: "div";
  defySection6: "div";
  riseSection6: "div";
  defySection7: "div";
  riseSection7: "div";
  defySection8: "div";
  riseSection8: "div";
  image2: "div";
  defySection9: "div";
  riseSection9: "div";
  defySection10: "div";
  riseSection10: "div";
  image3: "div";
  defySection11: "div";
  riseSection11: "div";
  image4: "div";
  defySection12: "div";
  riseSection12: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTimeline__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTimeline__VariantsArgs;
    args?: PlasmicTimeline__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTimeline__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicTimeline__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicTimeline__ArgProps,
          internalVariantPropNames: PlasmicTimeline__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTimeline__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTimeline";
  } else {
    func.displayName = `PlasmicTimeline.${nodeName}`;
  }
  return func;
}

export const PlasmicTimeline = Object.assign(
  // Top-level PlasmicTimeline renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroPage: makeNodeComponent("headerHeroPage"),
    columns: makeNodeComponent("columns"),
    loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8:
      makeNodeComponent(
        "loremIpsumBrandedContentRickardJakobssonGindeIratOledesSamafalingDibevisPenOchTrilevisDenKahanarEndotesRinadeGunAhmedGrafenEttChristerObergOgonGalararBelogiEftersomFarTorggangareFarenForYharMarknadsplatserLaxrutGanadeHaskaMobilstrumpaPredGimalPersonaliseringOmAlbinLindgrenAkeEkstromProkottaPreharPredeAgnostimodernBokstavsdrogDylingPlattfilmMicroMomentsJuloreTulertadSprakekonomiReklejmaAnEpikrati8"
      ),
    image: makeNodeComponent("image"),
    defySection: makeNodeComponent("defySection"),
    riseSection: makeNodeComponent("riseSection"),
    defySection2: makeNodeComponent("defySection2"),
    riseSection2: makeNodeComponent("riseSection2"),
    defySection3: makeNodeComponent("defySection3"),
    riseSection3: makeNodeComponent("riseSection3"),
    defySection4: makeNodeComponent("defySection4"),
    riseSection4: makeNodeComponent("riseSection4"),
    defySection5: makeNodeComponent("defySection5"),
    riseSection5: makeNodeComponent("riseSection5"),
    defySection6: makeNodeComponent("defySection6"),
    riseSection6: makeNodeComponent("riseSection6"),
    defySection7: makeNodeComponent("defySection7"),
    riseSection7: makeNodeComponent("riseSection7"),
    defySection8: makeNodeComponent("defySection8"),
    riseSection8: makeNodeComponent("riseSection8"),
    image2: makeNodeComponent("image2"),
    defySection9: makeNodeComponent("defySection9"),
    riseSection9: makeNodeComponent("riseSection9"),
    defySection10: makeNodeComponent("defySection10"),
    riseSection10: makeNodeComponent("riseSection10"),
    image3: makeNodeComponent("image3"),
    defySection11: makeNodeComponent("defySection11"),
    riseSection11: makeNodeComponent("riseSection11"),
    image4: makeNodeComponent("image4"),
    defySection12: makeNodeComponent("defySection12"),
    riseSection12: makeNodeComponent("riseSection12"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicTimeline
    internalVariantProps: PlasmicTimeline__VariantProps,
    internalArgProps: PlasmicTimeline__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Timeline",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicTimeline;
/* prettier-ignore-end */
